import pandas as pd
from datetime import datetime, timedelta
from statsmodels.tsa.statespace.sarimax import SARIMAX
import warnings
warnings.filterwarnings("ignore")

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
df = pd.read_csv('prize_results.csv')
df.columns = ['date','prize','front3_1','front3_2','last3_1','last3_2','last2']
df['date'] = pd.to_datetime(df['date'])
df = df.sort_values('date')

# ‡∏ï‡∏±‡πâ‡∏á index ‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà
df = df.set_index('date')

# ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
target_cols = ['prize','front3_1','front3_2','last3_1','last3_2','last2']

results = {}

# ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏î‡πâ‡∏ß‡∏¢ SARIMA
for target in target_cols:
    series = df[target]
    
    # ‡πÉ‡∏ä‡πâ parameter SARIMA ‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô (p,d,q,P,D,Q,s)
    # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î s=2 ‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡∏´‡∏ß‡∏¢‡∏≠‡∏≠‡∏Å‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏•‡∏∞ 2 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á (1 ‡πÅ‡∏•‡∏∞ 16)
    model = SARIMAX(series, order=(1,1,1), seasonal_order=(1,1,1,2), enforce_stationarity=False, enforce_invertibility=False)
    sarima_fit = model.fit(disp=False)
    
    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏Ñ‡πà‡∏≤‡∏ñ‡∏±‡∏î‡πÑ‡∏õ 1 ‡∏á‡∏ß‡∏î (15 ‡∏ß‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤)
    forecast = sarima_fit.forecast(steps=1)
    
    # ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
    results[target] = int(round(forecast.iloc[0]))

# ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏±‡∏î‡πÑ‡∏õ (‡∏á‡∏ß‡∏î 1 ‡∏û.‡∏¢.)
next_date = df.index.max() + timedelta(days=15)

print(f"üîÆ Predicted Lottery Results for {next_date.date()} (Statistical Forecast)\n")
for k,v in results.items():
    print(f"{k:12s}: {v}")